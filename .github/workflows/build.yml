name: Deploy Docs site to Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v5

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Linting
        run: pnpm lint

      - name: Running unit tests
        run: pnpm jest --coverage

      - name: Build with Next.js
        run: pnpm build
        env:
          PAGES_BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}

      - name: Setting upsteam
        run: git push --set-upstream origin main
        if: github.event_name != 'pull_request'

      # - name: Generating coverage badges
      #   uses: jpb06/jest-badges-action@latest
      #   with:
      #     coverage-summary-path: packages/react-mvvm/coverage/coverage-summary.json
      #     branches: main,preprod,staging
      #   if: github.event_name != 'pull_request'

      - name: Generating the size badge
        run: |
          node .github/scripts/size-badge.mjs
          git add badges/weight.svg
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Generating the size badge"
            git push
          fi
        if: github.event_name != 'pull_request'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/docs/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
